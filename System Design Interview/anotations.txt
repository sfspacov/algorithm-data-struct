Start asking about funtional and non-funtional features
	- They're waiting for questions that ask for important requirements
	- DON'T ESTIMATE USERS WITHOUT ANY REASONS.
		- IF DO IT, TELL MY CONCERN ABOUT IT (STORAGE, SERVERS,...)
		- For example, how many users will use the system
		- The system is global or not
	- Trade off: 
		- Explain why to choose this solution (about Core when asked)

- DON'T EXPLAIN EVERY PEACE OF MY SOLUTION (i.e. GATEWAY OR LB)
- KNOW ABOUT PROTOCOLS USED
	- HTTP (api requests)
	- RTMP (Streams)
	- WebRTC (video calls)
	- Websockets (chats and notifications?)

USE THESE:	
	- Gateway Load Balancer: AWS and Azure offers it
	- Replicas: Master/Slave
		- NoSql to high scalability
		- Sql to structured information
			- Sharding, even that not so easy
	- Cache: Creates when it's read from Slave and can have job to update it
	- S3 and CDN to stack content
		- Hot/Cold store on S3
	- Message Broker to exchange messages through apis
	- Parallel process
	- Horizontal scale

Design Patterns
	- Pub/Sub
	- Retry
	- Fault tolerance (return default value)
	- Repository

Chat:
	- TCP connections, because it's possible maintain it
		- Websockets, XMPP (WhatsApp use it)
	
Video:
	RTMP (over TCP), HLS (over HTTP)
	
TIPS
1. Don't get into details prematurely
	- Don't talk to much, without stop
2. Avoid silver bullet
3. Keep it simple stupid!
4. Thiking a lot before say something, eles vao me amassar!



HOT and COLD Storage: S3 and Glacier

Platform		"Hot"		"Cold"		Common Key Criteria

High-Speed Caching	Computer RAM	SSD		Data Latency

File Servers		SSD		HDD		IOPS

Backup Archive		HDD		Tape		Bandwidth

Cassandra x Mongo
Mongo is a json
Cassandra
	- has multiple Masters Nodes
		- what can guarantees 100% data availability for writes	
		- multiple write operations (more scalable)
	- DataModel with rows and coluns and typed
	- Cassandra query language (CQL) is quite similar to SQL
	- For aggregations needs third party (hadoop, spark)
	- It's free!!